@using MegaDeskWebApp

@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "MegaDesk | Add Quote";

    Validation.RequireField("customerName", "Customer name is required");
    Validation.RequireField("deskWidth", "Desk width is required");
    Validation.RequireField("deskDepth", "Desk depth is required");
    Validation.RequireField("deskNumOfDrawers", "Number of desk drawers is required");
    Validation.RequireField("deskMaterial", "Desk material is required");
    Validation.Add("deskWidth", Validator.Range(24.0, 96.0, "Width must be between 24 and 96 inches."));
    Validation.Add("deskDepth", Validator.Range(12.0, 48.0, "Depth must be between 12 and 48 inches."));
    Validation.Add("deskNumOfDrawers", Validator.Range(1, 7, "Number of drawers must be between 1 and 7."));

    var customerName = "";
    var deskWidth = 0.0m;
    var deskDepth = 0.0m;
    var deskNumOfDrawers = 0;
    var deskMaterialId = 0;
    var deskMaterialName = "";
    var deskMaterialPrice = 0.0;
    var rushDays = 0;
    var dateAdded = DateTime.Now.ToString();
    var quoteAmount = 0.0m;
    var selectedMaterial = new Material();

    List<MegaDeskWebApp.Material> materialList = new List<MegaDeskWebApp.Material>();

    var dbForList = Database.Open("MegaDeskWebApp");
    foreach (var row in dbForList.Query("SELECT * FROM Material"))
    {
        materialList.Add(new MegaDeskWebApp.Material { MaterialId = row.Id, MaterialName = row.materialName, MaterialPrice = row.materialPrice });
    }
    dbForList.Close();

    if (IsPost && Validation.IsValid())
    {
        customerName = Request.Form["customerName"];
        deskWidth = Request.Form["deskWidth"].AsDecimal();
        deskDepth = Request.Form["deskDepth"].AsDecimal();
        deskNumOfDrawers = Request.Form["deskNumOfDrawers"].AsInt();
        deskMaterialId = Request.Form["deskMaterial"].AsInt();
        rushDays = Request.Form["rushDays"].AsInt();

        // Find Desk Material Name and Price from the Id
        foreach (Material material in materialList)
        {
            if (material.MaterialId == Request.Form["deskMaterial"].AsInt())
            {
                deskMaterialName = material.MaterialName;
                deskMaterialPrice = material.MaterialPrice;
                selectedMaterial = material;
                break;
            }
            else
            {
                deskMaterialName = "";
                deskMaterialPrice = 0.0;
            }
        }

        // Calculate quote amount
        MegaDeskWebApp.DeskQuote newQuote = new MegaDeskWebApp.DeskQuote(customerName, deskWidth, deskDepth, deskNumOfDrawers, selectedMaterial, rushDays);
        quoteAmount = Math.Round(newQuote.CalculateQuoteTotal(), 2);

        if (!Request.Form["buttonSubmit"].Contains("Calculate"))
        {
            // Submit - Add quote to database and redirect to view page
            var db = Database.Open("MegaDeskWebApp");
            var insertCommand = "INSERT INTO Orders (customerName, width, depth, numOfDrawers, materialId, rushOrder, quoteDate, quoteAmount) Values(@0, @1, @2, @3, @4, @5, @6, @7); ";
            db.Execute(insertCommand, customerName, deskWidth, deskDepth, deskNumOfDrawers, deskMaterialId, rushDays, dateAdded, quoteAmount);
            var quoteId = db.GetLastInsertId();
            // quoteId = db.QueryValue("SELECT SCOPE_IDENTITY()");
            Response.Redirect("~/ViewQuote?ID=" + @quoteId);
        }
    }
}
<article class="row" id="add-quote-page">
    <section class="single-quote">
        <h2 class="headline">Add a Quote</h2>
        @Html.ValidationSummary()

        <form method="post" class="quote-form">
            <fieldset>
                <section class="form-group">
                    <span class="has-float-label">
                        <label for="customerName">Customer Name:</label>
                        <input type="text" class="form-control" id="customerName" name="customerName" value="@Request.Form["customerName"]" placeholder="Customer Name">
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskWidth">Desk Width:</label>
                        <input type="number" step="any" class="form-control" id="deskWidth" name="deskWidth" value="@Request.Form["deskWidth"]" placeholder="Width (24 - 96 inches)">
                       
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskDepth">Desk Depth:</label>
                        <input type="number" step="any" class="form-control" id="deskDepth" name="deskDepth" value="@Request.Form["deskDepth"]" placeholder="Depth (12 - 48 inches)">
                       
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskNumOfDrawers">Number of Desk Drawers:</label>
                        <input type="number" class="form-control" id="deskNumOfDrawers" name="deskNumOfDrawers" value="@Request.Form["deskNumOfDrawers"]" placeholder="Drawers (1-7)">
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskMaterial">Desk Material:</label>
                        <!-- Use value="@Request.Form["deskMaterial"]" to set which one is selected -->
                        <select class="form-control" id="deskMaterial" name="deskMaterial">
                        @foreach (Material material in materialList)
                         {
                            if (material.MaterialId == deskMaterialId)
                            {
                               <option selected="selected" value="@material.MaterialId" class="@material.MaterialName">@material.MaterialName</option>
                            }
                            else
                            {
                               <option value="@material.MaterialId" class="@material.MaterialName">@material.MaterialName</option>
                            }
                         }
                        </select>
                      
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="rushDays">Rush Options:</label>
                        <!-- use "@Request.Form["rushDays"]" to set which one is selected -->
                        <select class="form-control" id="rushDays" name="rushDays">
                            @if (Request.Form["rushDays"] == "0")
                            {
                                <option selected = "selected" value="0">None</option>
                            }
                            else
                            {
                                <option value="0">None</option>
                            }
                            @if (Request.Form["rushDays"] == "3")
                            {
                                <option selected = "selected" value="3">3 Days</option>
                            }
                            else
                            {
                                <option value="3">3 Days</option>
                            }
                            @if (Request.Form["rushDays"] == "5")
                            {
                                <option selected = "selected" value="5">5 Days</option>
                            }
                            else
                            {
                                <option value="5">5 Days</option>
                            }

                            @if (Request.Form["rushDays"] == "7")
                            {
                                <option selected = "selected" value="7">7 Days</option>
                            }
                            else
                            {
                                <option value="7">7 Days</option>
                            }
                        </select>
                    
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="quoteAmount">Quote Amount:</label>
                        <input type="text" class="form-control" id="quoteAmount" name="quoteAmount" value="$@String.Format("{0:0.00}", @quoteAmount)" readonly>
                    </span>
                </section>


                <p><input type="submit" name="buttonSubmit" value="Calculate Price"></p>
                <p><input type="submit" name="buttonSubmit" value="Add Quote"></p>
            </fieldset>
        </form>
    </section>
</article>
<p class=" menuLink button">
    <a href="~/Home.cshtml">Back to Menu</a>
</p>
<p class="cancel button">
    <a href="~/ViewAllQuotes.cshtml">Cancel</a>
</p>