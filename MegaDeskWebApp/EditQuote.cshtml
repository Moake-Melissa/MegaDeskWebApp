@using MegaDeskWebApp

@{

    Layout = "~/_Layout.cshtml";
    Page.Title = "MegaDesk | Edit Quote";

    var customerName = "";
    var deskWidth = 0;
    var deskDepth = 0;
    var deskNumOfDrawers = 0;
    var deskMaterialId = 0;
    var deskMaterialName = "";
    var deskMaterialPrice = 0.0;
    var rushDays = 0;
    var dateAdded = DateTime.Now.ToString();
    var quoteAmount = 0.0m;
    var quoteId = "";
    var selectedMaterial = new Material();

    List<Material> materialList = new List<Material>();

    var dbForList = Database.Open("MegaDeskWebApp");
    foreach (var row in dbForList.Query("SELECT * FROM Material"))
    {
        materialList.Add(new Material { MaterialId = row.Id, MaterialName = row.materialName, MaterialPrice = row.materialPrice });
    }
    dbForList.Close();

    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            quoteId = Request.QueryString["ID"];
            var db = Database.Open("MegaDeskWebApp");
            var dbCommand = "SELECT customerName, width, depth, numOfDrawers, materialId, materialName, rushOrder, quoteDate, quoteAmount FROM Orders join Material on Material.id = Orders.materialId  WHERE Orders.ID = @0";
            var row = db.QuerySingle(dbCommand, quoteId);

            if (row != null)
            {
                customerName = row.customerName;
                deskWidth = row.width;
                deskDepth = row.depth;
                deskNumOfDrawers = row.numOfDrawers;
                deskMaterialId = row.materialId;
                deskMaterialName = row.materialName;
                rushDays = row.rushOrder;
                dateAdded = row.quoteDate.ToString();
                quoteAmount = (decimal)row.quoteAmount;
            }
            else
            {
                Validation.AddFormError("No quote was found for that ID.");
            }
        }
        else
        {
            Validation.AddFormError("No quote was selected.");
        }
    }

    if (IsPost)
    {
        Validation.RequireField("customerName", "Customer name is required");
        Validation.RequireField("deskWidth", "Desk width is required");
        Validation.RequireField("deskDepth", "Desk depth is required");
        Validation.RequireField("deskNumOfDrawers", "Number of desk drawers is required");
        Validation.RequireField("deskMaterial", "Desk material is required");
        Validation.Add("deskWidth", Validator.Range(24, 96, "Width must be between 24 and 96 inches."));
        Validation.Add("deskDepth", Validator.Range(12, 48, "Depth must be between 12 and 48 inches."));
        Validation.Add("deskNumOfDrawers", Validator.Range(1, 7, "Number of drawers must be between 1 and 7."));

        customerName = Request.Form["customerName"];
        deskWidth = Request.Form["deskWidth"].AsInt();
        deskDepth = Request.Form["deskDepth"].AsInt();
        deskNumOfDrawers = Request.Form["deskNumOfDrawers"].AsInt();
        deskMaterialId = Request.Form["deskMaterial"].AsInt();
        rushDays = Request.Form["rushDays"].AsInt();
        quoteAmount = Request.Form["quoteAmount"].AsInt();
        quoteId = Request.Form["quoteId"];

        if (Validation.IsValid())
        {
            // Find Desk Material Name and Price from the Id
            foreach (Material material in materialList)
            {
                if (material.MaterialId == Request.Form["deskMaterial"].AsInt())
                {
                    deskMaterialName = material.MaterialName;
                    deskMaterialPrice = material.MaterialPrice;
                    selectedMaterial = material;
                    break;
                }
                else
                {
                    deskMaterialName = "";
                    deskMaterialPrice = 0.0;
                }
            }

            // Calculate quote amount
            MegaDeskWebApp.DeskQuote newQuote = new MegaDeskWebApp.DeskQuote(customerName, deskWidth, deskDepth, deskNumOfDrawers, selectedMaterial, rushDays);
            quoteAmount = newQuote.CalculateQuoteTotal();

            if (!Request.Form["buttonSubmit"].Contains("Calculate"))
            {
                var db = Database.Open("MegaDeskWebApp");
                var updateCommand = "UPDATE Orders SET customerName=@0, width=@1, depth=@2, numOfDrawers=@3, materialId=@4, rushOrder=@5, quoteAmount=@6 WHERE Id=@7";
                db.Execute(updateCommand, customerName, deskWidth, deskDepth, deskNumOfDrawers, deskMaterialId, rushDays, quoteAmount, quoteId);
                Response.Redirect("~/ViewQuote?ID=" + @quoteId);
            }
        }
    }
}
<article class="row" id="edit-quote-page">
    <section class="single-quote">
        <h2 class="headline">Edit Quote # @quoteId</h2>
        @Html.ValidationSummary()

        <form method="post" class="quote-form">
            <fieldset>
                <section class="form-group">
                    <span class="has-float-label">
                        <label for="customerName">Customer Name:</label>
                        <input type="text" class="form-control" id="customerName" name="customerName" value="@customerName" placeholder="Customer Name">
                      
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskWidth">Desk Width:</label>
                        <input type="number" class="form-control" id="deskWidth" name="deskWidth" value="@deskWidth" placeholder="Width (24 - 96 inches)">
                       
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskDepth">Desk Depth:</label>
                        <input type="number" class="form-control" id="deskDepth" name="deskDepth" value="@deskDepth" placeholder="Depth (12 - 48 inches)">
                       
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskNumOfDrawers">Number of Desk Drawers:</label>
                        <input type="number" class="form-control" id="deskNumOfDrawers" name="deskNumOfDrawers" value="@deskNumOfDrawers" placeholder="Drawers (1-7)">
                      
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskMaterial">Desk Material:</label>
                        <!-- Use value="@Request.Form["deskMaterial"]" to set which one is selected -->
                        <select class="form-control" id="deskMaterial" name="deskMaterial">
                            @foreach (Material material in materialList)
                            {
                                if (material.MaterialId == deskMaterialId)
                                {
                                   <option selected="selected" value="@material.MaterialId" class="@material.MaterialName">@material.MaterialName</option>
                                }
                                else
                                {
                                   <option value="@material.MaterialId" class="@material.MaterialName">@material.MaterialName</option>
                                }
                            }
                        </select>
                     
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="rushDays">Rush Options:</label>
                        <!-- use "@Request.Form["rushDays"]" to set which one is selected -->
                        <select class="form-control" id="rushDays" name="rushDays">
                            @if (rushDays == 0)
                            {
                                <option selected = "selected" value="0">None</option>
                            }
                            else
                            {
                                <option value="0">None</option>
                            }
                            @if (rushDays == 3)
                            {
                                <option selected = "selected" value="3">3 Days</option>
                            }
                            else
                            {
                                <option value="3">3 Days</option>
                            }
                            @if (rushDays == 5)
                            {
                                <option selected = "selected" value="5">5 Days</option>
                            }
                            else
                            {
                                <option value="5">5 Days</option>
                            }

                            @if (rushDays == 7)
                            {
                                <option selected = "selected" value="7">7 Days</option>
                            }
                            else
                            {
                                <option value="7">7 Days</option>
                            }
                        </select>
                      
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="quoteAmount">Quote Amount:</label>
                        <input type="text" class="form-control" id="quoteAmount" name="quoteAmount" value="$@quoteAmount" readonly>
                    </span>
                </section>

                <p><input type="submit" name="buttonSubmit" value="Calculate Price"></p>
                <input type="hidden" id="quoteId" name="quoteId" value="@quoteId">
                <p><input type="submit" name="buttonSubmit" value="Update Quote"></p>
            </fieldset>
        </form>
    </section>
</article>
<p class=" menuLink button">
    <a href="~/Home.cshtml">Back to Menu</a>
</p>