@{
    /**/

    Layout = "~/_Layout.cshtml";
    Page.Title = "MegaDesk | Edit Quote";

    var customerName = "";
    var deskWidth = 0;
    var deskDepth = 0;
    var deskNumOfDrawers = 0;
    var deskMaterial = "";
    var rushDays = 0;
    var dateAdded = DateTime.Now.ToString();
    var quoteAmount = 0;
    var quoteId = "";


    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            quoteId = Request.QueryString["ID"];
            var db = Database.Open("MegaDeskWebApp");
            var dbCommand = "SELECT * FROM Orders WHERE ID = @0";
            var row = db.QuerySingle(dbCommand, quoteId);

            if (row != null)
            {
                customerName = row.customerName;
                deskWidth = row.width;
                deskDepth = row.depth;
                deskNumOfDrawers = row.numOfDrawers;
                deskMaterial = row.typeOfMaterial;
                rushDays = row.rushOrder;
                dateAdded = row.quoteDate.ToString();
                quoteAmount = row.quoteAmount;
            }
            else
            {
                Validation.AddFormError("No quote was found for that ID.");
            }
        }
        else
        {
            Validation.AddFormError("No quote was selected.");
        }
    }

    if (IsPost)
    {
        Validation.RequireField("customerName", "Customer name is required");
        Validation.RequireField("deskWidth", "Desk width is required");
        Validation.RequireField("deskDepth", "Desk depth is required");
        Validation.RequireField("deskNumOfDrawers", "Number of desk drawers is required");
        Validation.RequireField("deskMaterial", "Desk material is required");
        Validation.Add("deskWidth", Validator.Range(24, 96, "Width must be between 24 and 96 inches."));
        Validation.Add("deskDepth", Validator.Range(12, 48, "Depth must be between 12 and 48 inches."));
        Validation.Add("deskNumOfDrawers", Validator.Range(1, 7, "Number of drawers must be between 1 and 7."));

        customerName = Request.Form["customerName"];
        deskWidth = Request.Form["deskWidth"].AsInt();
        deskDepth = Request.Form["deskDepth"].AsInt();
        deskNumOfDrawers = Request.Form["deskNumOfDrawers"].AsInt();
        deskMaterial = Request.Form["deskMaterial"];
        rushDays = Request.Form["rushDays"].AsInt();
        quoteAmount = Request.Form["quoteAmount"].AsInt();
        quoteId = Request.Form["quoteId"];

        if (Validation.IsValid())
        {
            var db = Database.Open("MegaDeskWebApp");
            var updateCommand = "UPDATE Orders SET customerName=@0, deskWidth=@1, deskDepth=@2, deskNumOfDrawers=@3, typeOfMaterial=@4, rushOrder=@5, quoteAmount=@6 WHERE Id=@7";
            db.Execute(updateCommand, customerName, deskWidth, deskDepth, deskNumOfDrawers, deskMaterial, rushDays, quoteAmount, quoteId);
            Response.Redirect("~/Home");
        }
    }
}
<article class="row" id="edit-quote-page">
    <section class="single-quote">
        <h2 class="headline">Edit Quote # @quoteId</h2>
        <hr>
        @Html.ValidationSummary()

        <form method="post" class="quote-form">
            <fieldset>
                <section class="form-group">
                    <span class="has-float-label">
                        <label for="customerName">Customer Name:</label>
                        <input type="text" class="form-control" id="customerName" name="customerName" value="@Request.Form["customerName"]" placeholder="Customer Name">
                        @Html.ValidationMessage("customerName")
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskWidth">Desk Width:</label>
                        <input type="number" class="form-control" id="deskWidth" name="deskWidth" value="@Request.Form["deskWidth"]" placeholder="Width (24 - 96 inches)">
                        @Html.ValidationMessage("deskWidth")
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskDepth">Desk Depth:</label>
                        <input type="number" class="form-control" id="deskDepth" name="deskDepth" value="@Request.Form["deskDepth"]" placeholder="Depth (12 - 48 inches)">
                        @Html.ValidationMessage("deskDepth")
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskNumOfDrawers">Number of Desk Drawers:</label>
                        <input type="number" class="form-control" id="deskNumOfDrawers" name="deskNumOfDrawers" value="@Request.Form["deskNumOfDrawers"]" placeholder="Drawers (1-7)">
                        @Html.ValidationMessage("deskNumOfDrawers")
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="deskMaterial">Desk Material:</label>
                        <!-- Use value="@Request.Form["deskMaterial"]" to set which one is selected -->
                        <select class="form-control" id="deskMaterial" name="deskMaterial">
                            <option value="Pine">Pine</option>
                            <option value="Laminate">Laminate</option>
                            <option value="Veneer">Veneer</option>
                            <option value="Oak">Oak</option>
                            <option value="Rosewood">Rosewood</option>
                        </select>
                        @Html.ValidationMessage("deskMaterial")
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="rushDays">Rush Options:</label>
                        <!-- use "@Request.Form["rushDays"]" to set which one is selected -->
                        <select class="form-control" id="rushDays" name="rushDays">
                            <option selected value="0">None</option>
                            <option value="3">3 Days</option>
                            <option value="5">5 Days</option>
                            <option value="7">7 Days</option>
                        </select>
                        @Html.ValidationMessage("rushDays")
                    </span>
                </section>

                <section class="form-group">
                    <span class="has-float-label">
                        <label for="totalAmount">Quote Amount:</label>
                        <output name="quoteAmount"></output>
                    </span>
                </section>

                <input type="hidden" id="quoteId" name="quoteId" value="@quoteId">
                <p><input type="submit" name="buttonSubmit" value="Update Quote"></p>
            </fieldset>
        </form>
    </section>
</article>
